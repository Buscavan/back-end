generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  cpf       String    @unique
  fotoMotoristaUrl String? @unique
  fotoCnhUrl String? @unique
  fotoPassageiroUrl String? @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role Role
  veiculos  Veiculo[]
  viagens   Viagem[]  @relation("UserViagens")
}

model Veiculo {
  id          Int      @id @default(autoincrement())
  modelo      String   
  placa       String   @unique
  capacidade  Int
  fotoVeiculoUrl   String    @unique 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  motorista   User     @relation(fields: [motoristaId], references: [id])
  motoristaId Int
  viagens     Viagem[]
}

model Viagem {
  id           Int      @id @default(autoincrement())
  origemId     Int
  origem       Cidade   @relation("Origem", fields: [origemId], references: [id])
  destinoId    Int
  destino      Cidade   @relation("Destino", fields: [destinoId], references: [id])
  dataInicial  DateTime
  dataFinal    DateTime
  valor        Float
  fotoDestinoUrl String @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  veiculo      Veiculo  @relation(fields: [veiculoId], references: [id])
  veiculoId    Int
  usuario      User     @relation(fields: [usuarioId], references: [id], name: "UserViagens")
  usuarioId    Int
  comentario   Comment? @relation(fields: [comentarioId], references: [id], name: "ViagemComment")
  comentarioId Int?
}

model Comment {
  id              Int       @id @default(autoincrement())
  content         String
  author          String
  createdAt       DateTime  @default(now())
  parentComment   Comment?  @relation("CommentReplies", fields: [parentCommentId], references: [id])
  parentCommentId Int?
  replies         Comment[] @relation("CommentReplies")
  viagem          Viagem[]  @relation("ViagemComment")

  @@index([parentCommentId])
}

model Cidade {
  id            Int      @id @default(autoincrement())
  nome          String?  @map("nome") @db.VarChar(120)
  uf            Int?     @map("uf")
  ibge          Int?     @map("ibge")
  lat_lon       String?  @map("lat_lon") @db.VarChar(200)
  cod_tom       Int?     @default(0) @map("cod_tom") @db.SmallInt
  estado        Estado?  @relation(fields: [uf], references: [id], name: "EstadoCidade")
  viagemDestino Viagem[] @relation("Destino")
  viagemOrigem  Viagem[] @relation("Origem")
}

model Estado {
  id      Int      @id @default(autoincrement())
  nome    String?  @map("nome") @db.VarChar(60)
  uf      String?  @map("uf") @db.VarChar(2)
  ibge    Int?     @map("ibge")
  pais    Int?     @map("pais")
  ddd     Json?    @map("ddd") @db.Json
  cidades Cidade[] @relation(name: "EstadoCidade")
}

enum Role {
  DRIVER
  PASSANGER
}